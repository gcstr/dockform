name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # fetch all tags for changelog and versioning

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true

      - name: GoReleaser release
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: release --clean
        env:
          # Use HOMEBREW_TOKEN (PAT) for Homebrew formula updates
          GITHUB_TOKEN: ${{ secrets.HOMEBREW_TOKEN }}

      - name: Install Task
        run: |
          sh -c "$(curl --location https://taskfile.dev/install.sh)" -- -d -b ~/.local/bin
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Generate CLI docs
        run: task docs:cli

      - name: Checkout docs site
        uses: actions/checkout@v4
        with:
          repository: gcstr/dockform-docs
          token: ${{ secrets.DOCS_PUSH_TOKEN }}
          ref: main
          path: website

      - name: Replace CLI docs and update nav version
        env:
          TAG: ${{ github.ref_name }}
        run: |
          set -euo pipefail

          # Clean the folder before moving the new files
          git -C website rm -r --ignore-unmatch docs/cli || true
          rm -rf website/docs/cli || true
          mkdir -p website/docs/cli
          cp -R docs/cli/. website/docs/cli/

          # Update docs site version in VitePress config
          python3 -c "import os, pathlib, re; tag=os.environ['TAG']; path=pathlib.Path('website/docs/.vitepress/config.mts'); data=path.read_text(); pattern=r\"(text:\\s*')[^']+(?=',[^{}]*link:\\s*'https://github.com/gcstr/dockform/releases/')\"; patched=re.sub(pattern, lambda m: m.group(1)+tag, data, count=1); path.write_text(patched)"

          # Commit and push to main
          cd website
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if [ -n "$(git status --porcelain)" ]; then
            git add docs/cli docs/.vitepress/config.mts
            git commit -m "docs: update CLI docs and version for $TAG"
            git push origin main
          else
            echo "No documentation changes to publish"
          fi
